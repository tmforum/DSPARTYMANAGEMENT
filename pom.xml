<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.orange.dsmapi</groupId>
    <artifactId>party</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>${project.artifactId}</name>
  
    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <hyperjaxb.version>0.6.0</hyperjaxb.version>
        <jersey.version>2.15</jersey.version>
        <jackson.version>1.9.13</jackson.version>
        <eclipselink.version>2.5.2</eclipselink.version>
		<jerseymedia.version>2.7</jerseymedia.version>
        <!-- Set the application name for this application -->
        <application.name>DSPartyManagement</application.name>
        <!-- Set main generated sources dir (part of build directory -->
        <generated.source.dir>${basedir}/src/main/java</generated.source.dir>
        <!-- Set generated sources dir for JaxB files (HyperJaxb3 plugin) -->
        <jaxb.generated.source.dir>${project.build.directory}/generated-sources/xjc</jaxb.generated.source.dir>
        <!-- package name of the main class (must match the package provided 
             name in the binding.xjc file -->
        <model.main.class.name>individual</model.main.class.name>
    
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${eclipselink.version}</version>
            <scope>provided</scope>
        </dependency>       
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>           
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>provided</scope>           
        </dependency>        
        <dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>2.5.2</version>
		</dependency>            
		<dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jerseymedia.version}</version>
			<exclusions>
				<exclusion>  <!-- Exclude jersey-common import (to avoid guava import) -->
					<groupId>org.glassfish.jersey.core</groupId>
					<artifactId>jersey-common</artifactId>
				</exclusion>
			</exclusions> 
        </dependency> 
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>           
        </dependency>
    </dependencies>

    <build>
        <!-- Final name -->
        <finalName>${project.artifactId}</finalName>

	    <plugins>
	      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>2.3.2</version>
		<configuration>
		  <source>1.7</source>
		  <target>1.7</target>
		</configuration>
	      </plugin>
	      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-war-plugin</artifactId>
		<version>2.3</version>
		<configuration>
		  <failOnMissingWebXml>false</failOnMissingWebXml>
		  <webResources>
		    <resource>
		      <filtering>true</filtering>
		      <directory>${basedir}/src/main/webapp/WEB-INF</directory>
		      <targetPath>WEB-INF</targetPath>
		      <includes>
			<include>glassfish-web.xml</include>
		      </includes>        
		    </resource>
		  </webResources> 
		</configuration>
	      </plugin>
	      <!-- Add generated-sources directory to the project -->
	      <plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>build-helper-maven-plugin</artifactId>
		<version>1.9.1</version>
		<executions>
		  <execution>
		    <phase>generate-sources</phase>
		    <goals>
		      <goal>add-source</goal>
		    </goals>
		    <configuration>
		      <sources>
			<source>${jaxb.generated.source.dir}</source>
		      </sources>
		      <failIfNoMatch>false</failIfNoMatch>
		    </configuration>
		  </execution>
		</executions>
	      </plugin>        
	    </plugins>    
        
    </build>
   
<profiles>     
    <!-- Default code generation -->
    <profile>
      <id>model-gen</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jvnet.hyperjaxb3</groupId>
            <artifactId>maven-hyperjaxb3-plugin</artifactId>
            <version>${hyperjaxb.version}</version>
            <executions>
              <execution>                                      
                <!-- for the generate goal of hyperjaxb3, use the following config: -->
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <!-- Directory locations -->
                  <schemaDirectory>${basedir}/src/main/resources</schemaDirectory>
                  <bindingDirectory>${basedir}/src/main/resources</bindingDirectory>
                  <generateDirectory>${jaxb.generated.source.dir}</generateDirectory>
                  <!-- Use JPA2 variant when generating classes -->
                  <variant>jpa2</variant>
                  <!-- Allows superclass to be defined for the classes generated from the xsd: -->
                  <extension>true</extension>
                  <!-- Consistently generate classes -->
                  <removeOldOutput>true</removeOldOutput>
                  <!-- Don't generate Equals & Hashcode -->
                  <generateEquals>false</generateEquals>
                  <generateHashCode>false</generateHashCode>
                  <!-- Enable the annotate plugin -->
                  <args>
                    <arg>-Xannotate</arg>
                  </args>
                </configuration>
              </execution>
            </executions>
            <!-- Needed for the annote plugin (annox) the find the Annotate class -->
            <dependencies>
              <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-core-asl</artifactId>
                <version>1.9.13</version>
              </dependency>
              <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>1.9.13</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>maven-replacer-plugin</artifactId>
            <version>1.3.9</version>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <basedir>${jaxb.generated.source.dir}</basedir>
              <includes>
                <include>org/tmf/dsmapi/${model.main.class.name}/model/**/*.java</include>
              </includes>
              <excludes>
                <exclude>org/tmf/dsmapi/${model.main.class.name}/model/**/ObjectFactory.java</exclude>
              </excludes>
              <!--<regex>true</regex>-->
              <replacements>
                <replacement>						
                  <!-- Add @JsonIgnore annotation to Hjid getter -->
                  <unescape>true</unescape>
                  <token>public Long getHjid</token>
                  <value>@org.codehaus.jackson.annotate.JsonIgnore\n    public Long getHjid</value>
                </replacement> 
              </replacements>
            </configuration>
          </plugin>                    
          <!-- Add generated-sources directory to the project -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${jaxb.generated.source.dir}</source>
                  </sources>
                  <failIfNoMatch>false</failIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>         
        </plugins>        
      </build>
    </profile>
  </profiles>
</project>
